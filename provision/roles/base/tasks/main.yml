- name: Set timezone to Asia/Tokyo
  timezone:
    name: Asia/Tokyo

- name: install packages
  apt:
    name: '{{ item.name }}'
    state: '{{ item.state | default("present") }}'
    update_cache: yes
  with_items: '{{ apt.packages }}'

- name: update fstab
  blockinfile:
    path: /etc/fstab
    insertbefore: EOF
    block: "{{ lookup('file', 'fstab-backup-info') }}"

- name: apache config
  blockinfile:
    path: /etc/apache2/sites-enabled/000-default.conf
    insertbefore: "DocumentRoot /var/www/html"
    block: |
          Alias /webdav "/media/mystorage"
 
          <Location /webdav>
                  Require all granted
                  DAV on
                  Options Indexes
          </Location>

- name: use dav, dav_fs module
  file:
    src: /etc/apache2/mods-available/{{ item }}
    dest: /etc/apache2/mods-enabled/{{ item }}
    state: link
  with_items:
    - dav.load
    - dav_fs.load
    - dav_fs.conf

- name: make link to web-signage
  file:
    src: /home/pi/work/web-signage
    dest: /var/www/html/web-signage
    state: link

- name: set user cron
  cron:
    name: sync photo for web-signage
    user: pi
    hour: "0"
    minute: "0"
    job: "/home/pi/work/web-signage/daily.sh"

- name: set user cron for tuner-info
  cron:
    name: tuner-info
    user: pi
    minute: "0"
    job: "/home/pi/work/tuner-info/get.sh"

- name: set user cron for sleep time
  cron:
    name: "{{ item.name }}"
    user: pi
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    job: "/home/pi/work/google-home/sleep-time.sh"
  loop:
    - name: noon sleep timer
      hour: 12
      minute: 45
    - name: afternoon sleep timer
      hour: 20
      minute: 35

- name: set user cron for okatazuke time
  cron:
    name: "{{ item.name }}"
    user: pi
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    job: "/home/pi/work/google-home/okatazuke-time.sh"
  loop:
    - name: afternoon okatazuke timer
      hour: 20
      minute: 15

- name: set user cron for hoikuen time
  cron:
    name: "{{ item.name }}"
    user: pi
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    weekday: "1-5"
    job: "{{ item.job }}"
  loop:
    - name: hoikuen ready time
      hour: 7
      minute: 30
      job: "/home/pi/work/google-home/hoikuen-ready-time.sh"
    - name: hoikuen time
      hour: 7
      minute: 50
      job: "/home/pi/work/google-home/hoikuen-time.sh"


- name: set user cron for todo-photo
  cron:
    name: todo-photo
    user: pi
    minute: "0"
    job: "/home/pi/work/todo-photo/run.sh >> /home/pi/work/todo-photo/todo-photo.log 2>&1"

- name: set user secret cron
  cron:
    name: secret cron
    user: pi
    hour: "1"
    minute: "0"
    job: "/home/pi/work/secrets/script.sh >> /home/pi/work/secret-script.log  2>&1"
  with_first_found:
    files:
      - /home/pi/work/secrets/script.sh
    skip: true

- name: set file sync
  cron:
    name: backup files
    user: root # ROOT!!
    hour: "5"
    minute: "0"
    job: "/home/pi/work/mirror/mirror.sh >> /home/pi/work/mirror/mirror.log  2>&1"

- name: samba config
  copy:
    src: files/smb.conf
    dest: /etc/samba/smb.conf

- name: update autostart
  blockinfile:
    path: /home/pi/.config/lxsession/LXDE/autostart
    insertbefore: EOF
    block: |
      /home/pi/kiosk.sh

- name: copy kiosk.sh
  copy:
    src: files/kiosk.sh
    dest: /home/pi/kiosk.sh
    mode: 0755
    owner: pi
    group: pi

- name: copy dotfiles
  copy:
    src: "{{item}}"
    dest: /home/pi/
    mode: 0755
    owner: pi
    group: pi
  with_fileglob:
    - files/dotfiles/*


- name: update x-session-manager
  file:
    src: /usr/bin/lxsession
    dest: /etc/alternatives/x-session-manager
    state: link

- name: update x-window-manager
  file:
    src: /usr/bin/openbox
    dest: /etc/alternatives/x-window-manager
    state: link

# set up google notifier
- name: git clone google-home-notifier
  git:
    repo: https://github.com/inajob/google-home-notifier.git
    dest: /home/pi/work/google-home-notifier
  become: yes
  become_user: pi

- name: npm install in google-home-notifier
  shell:
    cmd:  npm install
    chdir: /home/pi/work/google-home-notifier
  become: yes
  become_user: pi

- name: change file in node_modules
  lineinfile:
    path: /home/pi/work/google-home-notifier/node_modules/mdns/lib/browser.js
    regexp: "^, 'DNSServiceGetAddrInfo'"

    line: ", 'DNSServiceGetAddrInfo' in dns_sd ? rst.DNSServiceGetAddrInfo() : rst.getaddrinfo({families:[4]})"
